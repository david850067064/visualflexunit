<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) 2007 Allurent, Inc.
    http://code.google.com/p/visualflexunit/
    
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    
    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->

<vfuui:VisualView 
        xmlns:vfuui="com.allurent.flexunit2.vfu.flexui.*"
        xmlns:mx="http://www.adobe.com/2006/mxml"
        title="No baseline exists for test. Use current bitmap as new baseline image?">
    
    <mx:Script>
        <![CDATA[
            import com.allurent.flexunit2.vfu.errors.MissingBaselineError;
            
            import mx.core.Application;
            
            [Bindable]
            public var error:MissingBaselineError;
            [Bindable]
            private var _actualBitmap:Bitmap; 
            
            /*
             * TODO?
             *
             * This method is a workaround for an unsolved bug. The Image.source below
             * that uses _actualBitmap was previously written to bind to {error.actualBitmap}. 
             * This worked fine the first time this view was displayed for a given failure
             * (during the running of the tests) but when the user selected a failure in
             * the list, at that point the same Bitmap instance's bitmapData property showed
             * up as null. I don't see any logical reason for this and speculate that it gets 
             * broken during some binding update process. Also mysterious is the fact 
             * that this view's sibling view, BitmapsNotMatchDetailView, uses 
             * {error.actualBitmap} in precisely the same way, and it works reliably.
             */
            public function init():void
            {
                _actualBitmap = new Bitmap(error.actualBMD);
            }
        ]]>
    </mx:Script>

    <mx:VBox styleName="paddedBox"> 
        <mx:Button 
                label="Yes, Use Current Bitmap As New Baseline" 
                click="onBlessButtonClick()"
                enabled="{Application.application.blessingEnabled}" />
    </mx:VBox>
    <mx:HBox 
            styleName="paddedBox" 
            paddingTop="0"
            width="100%">
        <mx:HBox 
                backgroundColor="0xCCCCFF" 
                styleName="paddedBox"
                cornerRadius="5"
                borderStyle="solid"
                width="100%">
            <mx:VBox>
                <mx:Label text="Current Bitmap" fontWeight="bold"/>
                <mx:Image source="{_actualBitmap}"  />
            </mx:VBox>
        </mx:HBox>
    </mx:HBox>
    <mx:Label 
            text="Baseline loc:  {error.url}" 
            fontWeight="bold" />
    <mx:TextArea 
            text="{error.getStackTrace()}"
            width="100%" 
            height="100%" 
            borderStyle="none" 
            wordWrap="false" />
</vfuui:VisualView>
